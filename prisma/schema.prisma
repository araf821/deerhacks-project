// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  imageUrl           String
  email              String   @unique
  password           String
  school             String
  bio                String?
  socialLinks        Social[]
  courses            Course[]
  currentAvailStatus Status?
}

enum USER_AVAILABILITY_TYPE {
  // LOOKING_FOR_STUDY_GROUP_ONLINE
  LOOKING_FOR_STUDY_GROUP_IRL
  AVAILABLE_TO_HELP_IRL
  AVAILABLE_TO_HELP_ONLINE
  LOOKING_FOR_HELP_IRL
  LOOKING_FOR_HELP_ONLINE
}

model Status {
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
  userAvaibilityType USER_AVAILABILITY_TYPE
  userId             String                 @unique @db.ObjectId
  msg                String
  courses            Course[]
  user               User                   @relation(fields: [userId], references: [id])
}

model Social {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  label  String
  link   String
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

enum COMPLETION_STATUS {
  ONGOING
  COMPLETED
}

enum GRADE {
  A
  B
  C
  D
  F
}

enum STUDENT_TYPE {
  TEACHER
  LEARNER
}

model Course {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  courseCode       String
  completionStatus COMPLETION_STATUS
  grade            GRADE?
  type             STUDENT_TYPE      @default(LEARNER)

  student  User    @relation(fields: [userId], references: [id])
  userId   String  @db.ObjectId
  Status   Status? @relation(fields: [statusId], references: [id])
  statusId String? @db.ObjectId
}

// model Review {
//   student    User   @relation(fields: [userId], references: [id])
//   teacher    User   @relation(fields: [userId], references: [id])
//   reviewText String
//   ratingNum  Int
//   course     Course @relation(fields: [courseId], references: [id])
//   courseId   String @db.ObjectId
// }
